"use strict";(self.webpackChunk_playcanvas_blog=self.webpackChunk_playcanvas_blog||[]).push([[33246],{69244:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(74848),t=a(28453);const i={authors:"donovan",slug:"compressing-gaussian-splats",title:"Compressing Gaussian Splats",tags:["gaussian-splats","compression","supersplat"]},r=void 0,o={permalink:"/compressing-gaussian-splats",editUrl:"https://github.com/playcanvas/blog/tree/main/blog/2023-12-05-compressing-gaussian-splats.md",source:"@site/blog/2023-12-05-compressing-gaussian-splats.md",title:"Compressing Gaussian Splats",description:"Introduction",date:"2023-12-05T00:00:00.000Z",tags:[{inline:!0,label:"gaussian-splats",permalink:"/tags/gaussian-splats"},{inline:!0,label:"compression",permalink:"/tags/compression"},{inline:!0,label:"supersplat",permalink:"/tags/supersplat"}],readingTime:3.625,hasTruncateMarker:!0,authors:[{name:"Donovan Hutchence",title:"Staff Software Engineer",url:"https://twitter.com/slimbuck7",imageURL:"https://pbs.twimg.com/profile_images/1727369755231727616/ukKVbC9b_400x400.png",key:"donovan",page:null}],frontMatter:{authors:"donovan",slug:"compressing-gaussian-splats",title:"Compressing Gaussian Splats",tags:["gaussian-splats","compression","supersplat"]},unlisted:!1,prevItem:{title:"Massive Upgrade for the PlayCanvas Developer Site",permalink:"/massive-upgrade-for-the-playcanvas-developer-site"},nextItem:{title:"Boost Your Efficiency: Editor gets Support for AVIF and WebP",permalink:"/avif-webp-land-in-editor"}},l={authorsImageUrls:[void 0]},p=[{value:"Introduction",id:"introduction",level:3}];function c(e){const s={a:"a",h3:"h3",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h3,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/",children:(0,n.jsx)(s.strong,{children:"3D Gaussian Splatting"})})," is a new method for digitizing and rendering real world objects. With gaussian splatting, you can digitize a scene from a few photos using services like ",(0,n.jsx)(s.a,{href:"https://lumalabs.ai/",children:"Luma Labs"})," or ",(0,n.jsx)(s.a,{href:"https://poly.cam/",children:"Polycam"}),". These services take the set of photos and generate a 3d Gaussian Splat scene in ",(0,n.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/PLY_(file_format)",children:"PLY format"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"For example, this is a Gaussian Splat scene rendered in PlayCanvas."}),"\n",(0,n.jsx)("div",{className:"iframe-container",children:(0,n.jsx)("iframe",{loading:"lazy",src:"https://playcanv.as/p/69cnpevQ/",title:"360 lookaround camera",webkitallowfullscreen:"true",mozallowfullscreen:"true",allow:"autoplay",allowfullscreen:"true",allowvr:"",scrolling:"no",frameborder:"0"})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>o});var n=a(96540);const t={},i=n.createContext(t);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);