"use strict";(self.webpackChunk_playcanvas_blog=self.webpackChunk_playcanvas_blog||[]).push([[52437],{48881:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var n=t(74848),o=t(28453);const r={authors:"will",slug:"physically-based-rendering-comes-to-webgl",title:"Physically Based Rendering comes to WebGL",tags:["engine"]},s=void 0,i={permalink:"/physically-based-rendering-comes-to-webgl",editUrl:"https://github.com/playcanvas/blog/tree/main/blog/2014-12-10-physically-based-rendering-comes-to-webgl.md",source:"@site/blog/2014-12-10-physically-based-rendering-comes-to-webgl.md",title:"Physically Based Rendering comes to WebGL",description:"If you're working with real-time 3D, chances are that you want your scenes to look physically accurate.\xa0For many years, graphics engines have relied on a non-physical approximations without respect to energy conservation and had problems with properly decoupling lighting from the actual material properties. In recent times, huge advances have been made to formulate more accurate shading approaches as well as provide sensible material inputs, which could approximate many types of surfaces without using hacks and tweaks for each scene and lighting conditions. This is a collection of techniques and art-producing approaches often referred to as Physically Based Rendering, or PBR.",date:"2014-12-10T00:00:00.000Z",tags:[{inline:!0,label:"engine",permalink:"/tags/engine"}],readingTime:1.87,hasTruncateMarker:!0,authors:[{name:"Will Eastcott",title:"CEO",url:"https://twitter.com/willeastcott",imageURL:"https://pbs.twimg.com/profile_images/2635146631/edcd8b6dc4a34625770095941519ca8a_400x400.png",key:"will",page:null}],frontMatter:{authors:"will",slug:"physically-based-rendering-comes-to-webgl",title:"Physically Based Rendering comes to WebGL",tags:["engine"]},unlisted:!1,prevItem:{title:"PLAYHACK December - Creating Presents",permalink:"/playhack-december-creating-presents"},nextItem:{title:"PLAYCANVAS in LUDUM DARE 31",permalink:"/playcanvas-in-ludum-dare-31"}},l={authorsImageUrls:[void 0]},c=[];function p(e){const a={p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{className:"iframe-container",children:(0,n.jsx)("iframe",{loading:"lazy",src:"https://playcanv.as/p/SA7hVBLt/",title:"360 lookaround camera",webkitallowfullscreen:"true",mozallowfullscreen:"true",allow:"autoplay",allowfullscreen:"true",allowvr:"",scrolling:"no",frameborder:"0"})}),"\n",(0,n.jsx)(a.p,{children:"If you're working with real-time 3D, chances are that you want your scenes to look physically accurate.\xa0For many years, graphics engines have relied on a non-physical approximations without respect to energy conservation and had problems with properly decoupling lighting from the actual material properties. In recent times, huge advances have been made to formulate more accurate shading approaches as well as provide sensible material inputs, which could approximate many types of surfaces without using hacks and tweaks for each scene and lighting conditions. This is a collection of techniques and art-producing approaches often referred to as Physically Based Rendering, or PBR."})]})}function d(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>i});var n=t(96540);const o={},r=n.createContext(o);function s(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);